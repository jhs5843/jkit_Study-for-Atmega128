
jkit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000976  00000a0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000976  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006a  00800126  00800126  00000a30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011b6  00000000  00000000  00000bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a96  00000000  00000000  00001db2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a97  00000000  00000000  00002848  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  000032e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000617  00000000  00000000  000035e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008e1  00000000  00000000  00003bfb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  000044dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	7a c1       	rjmp	.+756    	; 0x30a <__vector_5>
  16:	00 00       	nop
  18:	8f c1       	rjmp	.+798    	; 0x338 <__vector_6>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	92 c1       	rjmp	.+804    	; 0x366 <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e7       	ldi	r30, 0x76	; 118
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 32       	cpi	r26, 0x26	; 38
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e2       	ldi	r26, 0x26	; 38
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 39       	cpi	r26, 0x90	; 144
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	fa d0       	rcall	.+500    	; 0x2b8 <main>
  c4:	56 c4       	rjmp	.+2220   	; 0x972 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <init_led>:
	TWDR = data;				// DATA 준비
	TWCR = (1 << TWINT) | (1 << TWEN);		// DATA 전송
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x28) ;
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);	// STOP 전송
	while ((TWCR & (1 << TWSTO))) ;		// STOP 확인
}
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	8a bb       	out	0x1a, r24	; 26
  cc:	1b ba       	out	0x1b, r1	; 27
  ce:	08 95       	ret

000000d0 <init_fnd>:
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	84 bb       	out	0x14, r24	; 20
  d4:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
  d8:	08 95       	ret

000000da <init_switch>:
  da:	12 b8       	out	0x02, r1	; 2
  dc:	80 e3       	ldi	r24, 0x30	; 48
  de:	83 b9       	out	0x03, r24	; 3
  e0:	08 95       	ret

000000e2 <init_timer>:
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	87 bf       	out	0x37, r24	; 55
  e6:	84 e0       	ldi	r24, 0x04	; 4
  e8:	83 bf       	out	0x33, r24	; 51
  ea:	8b ef       	ldi	r24, 0xFB	; 251
  ec:	82 bf       	out	0x32, r24	; 50
  ee:	08 95       	ret

000000f0 <init_serial>:
  f0:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
  f4:	61 15       	cp	r22, r1
  f6:	2b e4       	ldi	r18, 0x4B	; 75
  f8:	72 07       	cpc	r23, r18
  fa:	81 05       	cpc	r24, r1
  fc:	91 05       	cpc	r25, r1
  fe:	49 f1       	breq	.+82     	; 0x152 <init_serial+0x62>
 100:	64 f4       	brge	.+24     	; 0x11a <init_serial+0x2a>
 102:	60 38       	cpi	r22, 0x80	; 128
 104:	25 e2       	ldi	r18, 0x25	; 37
 106:	72 07       	cpc	r23, r18
 108:	81 05       	cpc	r24, r1
 10a:	91 05       	cpc	r25, r1
 10c:	41 f1       	breq	.+80     	; 0x15e <init_serial+0x6e>
 10e:	60 34       	cpi	r22, 0x40	; 64
 110:	78 43       	sbci	r23, 0x38	; 56
 112:	81 05       	cpc	r24, r1
 114:	91 05       	cpc	r25, r1
 116:	01 f1       	breq	.+64     	; 0x158 <init_serial+0x68>
 118:	25 c0       	rjmp	.+74     	; 0x164 <init_serial+0x74>
 11a:	61 15       	cp	r22, r1
 11c:	21 ee       	ldi	r18, 0xE1	; 225
 11e:	72 07       	cpc	r23, r18
 120:	81 05       	cpc	r24, r1
 122:	91 05       	cpc	r25, r1
 124:	81 f0       	breq	.+32     	; 0x146 <init_serial+0x56>
 126:	61 15       	cp	r22, r1
 128:	22 ec       	ldi	r18, 0xC2	; 194
 12a:	72 07       	cpc	r23, r18
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	82 07       	cpc	r24, r18
 130:	91 05       	cpc	r25, r1
 132:	31 f0       	breq	.+12     	; 0x140 <init_serial+0x50>
 134:	61 15       	cp	r22, r1
 136:	76 49       	sbci	r23, 0x96	; 150
 138:	81 05       	cpc	r24, r1
 13a:	91 05       	cpc	r25, r1
 13c:	99 f4       	brne	.+38     	; 0x164 <init_serial+0x74>
 13e:	06 c0       	rjmp	.+12     	; 0x14c <init_serial+0x5c>
 140:	88 e0       	ldi	r24, 0x08	; 8
 142:	89 b9       	out	0x09, r24	; 9
 144:	11 c0       	rjmp	.+34     	; 0x168 <init_serial+0x78>
 146:	80 e1       	ldi	r24, 0x10	; 16
 148:	89 b9       	out	0x09, r24	; 9
 14a:	0e c0       	rjmp	.+28     	; 0x168 <init_serial+0x78>
 14c:	89 e1       	ldi	r24, 0x19	; 25
 14e:	89 b9       	out	0x09, r24	; 9
 150:	0b c0       	rjmp	.+22     	; 0x168 <init_serial+0x78>
 152:	83 e3       	ldi	r24, 0x33	; 51
 154:	89 b9       	out	0x09, r24	; 9
 156:	08 c0       	rjmp	.+16     	; 0x168 <init_serial+0x78>
 158:	84 e4       	ldi	r24, 0x44	; 68
 15a:	89 b9       	out	0x09, r24	; 9
 15c:	05 c0       	rjmp	.+10     	; 0x168 <init_serial+0x78>
 15e:	87 e6       	ldi	r24, 0x67	; 103
 160:	89 b9       	out	0x09, r24	; 9
 162:	02 c0       	rjmp	.+4      	; 0x168 <init_serial+0x78>
 164:	88 e0       	ldi	r24, 0x08	; 8
 166:	89 b9       	out	0x09, r24	; 9
 168:	1b b8       	out	0x0b, r1	; 11
 16a:	88 e1       	ldi	r24, 0x18	; 24
 16c:	8a b9       	out	0x0a, r24	; 10
 16e:	86 e0       	ldi	r24, 0x06	; 6
 170:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 174:	08 95       	ret

00000176 <SendByte>:
 176:	5d 9b       	sbis	0x0b, 5	; 11
 178:	fe cf       	rjmp	.-4      	; 0x176 <SendByte>
 17a:	8c b9       	out	0x0c, r24	; 12
 17c:	08 95       	ret

0000017e <SendLine>:
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	ec 01       	movw	r28, r24
 184:	88 81       	ld	r24, Y
 186:	88 23       	and	r24, r24
 188:	29 f0       	breq	.+10     	; 0x194 <SendLine+0x16>
 18a:	21 96       	adiw	r28, 0x01	; 1
 18c:	f4 df       	rcall	.-24     	; 0x176 <SendByte>
 18e:	89 91       	ld	r24, Y+
 190:	81 11       	cpse	r24, r1
 192:	fc cf       	rjmp	.-8      	; 0x18c <SendLine+0xe>
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	08 95       	ret

0000019a <init_adc>:
 19a:	86 b1       	in	r24, 0x06	; 6
 19c:	87 60       	ori	r24, 0x07	; 7
 19e:	86 b9       	out	0x06, r24	; 6
 1a0:	3e 9a       	sbi	0x07, 6	; 7
 1a2:	37 9a       	sbi	0x06, 7	; 6
 1a4:	08 95       	ret

000001a6 <init_extSwitch>:
 1a6:	12 b8       	out	0x02, r1	; 2
 1a8:	80 ef       	ldi	r24, 0xF0	; 240
 1aa:	83 b9       	out	0x03, r24	; 3
 1ac:	8a e0       	ldi	r24, 0x0A	; 10
 1ae:	8a bf       	out	0x3a, r24	; 58
 1b0:	80 e3       	ldi	r24, 0x30	; 48
 1b2:	89 bf       	out	0x39, r24	; 57
 1b4:	08 95       	ret

000001b6 <init_i2c>:
 1b6:	88 9a       	sbi	0x11, 0	; 17
 1b8:	89 9a       	sbi	0x11, 1	; 17
 1ba:	80 e2       	ldi	r24, 0x20	; 32
 1bc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 1c0:	08 95       	ret

000001c2 <read_twi_2byte_nopreset>:
int read_twi_2byte_nopreset()
{
	char high_byte, low_byte;
	TWCR = (1 << TWINT) | (1<<TWSTA) | (1<<TWEN);// START 전송
 1c2:	84 ea       	ldi	r24, 0xA4	; 164
 1c4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x08) ;		// START 상태 검사, 이후 ACK 및 상태 검사
 1c8:	e4 e7       	ldi	r30, 0x74	; 116
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	a1 e7       	ldi	r26, 0x71	; 113
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	88 23       	and	r24, r24
 1d4:	ec f7       	brge	.-6      	; 0x1d0 <read_twi_2byte_nopreset+0xe>
 1d6:	8c 91       	ld	r24, X
 1d8:	88 7f       	andi	r24, 0xF8	; 248
 1da:	88 30       	cpi	r24, 0x08	; 8
 1dc:	c9 f7       	brne	.-14     	; 0x1d0 <read_twi_2byte_nopreset+0xe>
	TWDR = 0x98 | 0;			// SLA+W 준비, W=0
 1de:	88 e9       	ldi	r24, 0x98	; 152
 1e0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		// SLA+W 전송
 1e4:	84 e8       	ldi	r24, 0x84	; 132
 1e6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x18) ;
 1ea:	e4 e7       	ldi	r30, 0x74	; 116
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	a1 e7       	ldi	r26, 0x71	; 113
 1f0:	b0 e0       	ldi	r27, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	88 23       	and	r24, r24
 1f6:	ec f7       	brge	.-6      	; 0x1f2 <read_twi_2byte_nopreset+0x30>
 1f8:	8c 91       	ld	r24, X
 1fa:	88 7f       	andi	r24, 0xF8	; 248
 1fc:	88 31       	cpi	r24, 0x18	; 24
 1fe:	c9 f7       	brne	.-14     	; 0x1f2 <read_twi_2byte_nopreset+0x30>
	TWDR = 1;				// aTS75 Reg 값 준비
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		// aTS75 Reg 값 전송
 206:	84 e8       	ldi	r24, 0x84	; 132
 208:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x28) ;
 20c:	e4 e7       	ldi	r30, 0x74	; 116
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	a1 e7       	ldi	r26, 0x71	; 113
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	88 23       	and	r24, r24
 218:	ec f7       	brge	.-6      	; 0x214 <read_twi_2byte_nopreset+0x52>
 21a:	8c 91       	ld	r24, X
 21c:	88 7f       	andi	r24, 0xF8	; 248
 21e:	88 32       	cpi	r24, 0x28	; 40
 220:	c9 f7       	brne	.-14     	; 0x214 <read_twi_2byte_nopreset+0x52>
	TWCR = (1 << TWINT) | (1<<TWSTA) | (1<<TWEN);// RESTART 전송
 222:	84 ea       	ldi	r24, 0xA4	; 164
 224:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x10) ;		// RESTART 상태 검사, 이후 ACK, NO_ACK 상태 검사
 228:	e4 e7       	ldi	r30, 0x74	; 116
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	a1 e7       	ldi	r26, 0x71	; 113
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	88 23       	and	r24, r24
 234:	ec f7       	brge	.-6      	; 0x230 <read_twi_2byte_nopreset+0x6e>
 236:	8c 91       	ld	r24, X
 238:	88 7f       	andi	r24, 0xF8	; 248
 23a:	80 31       	cpi	r24, 0x10	; 16
 23c:	c9 f7       	brne	.-14     	; 0x230 <read_twi_2byte_nopreset+0x6e>
	TWDR = 0x98 | 1;			// SLA+R 준비, R=1
 23e:	89 e9       	ldi	r24, 0x99	; 153
 240:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);		// SLA+R 전송
 244:	84 e8       	ldi	r24, 0x84	; 132
 246:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while (((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x40) ;
 24a:	e4 e7       	ldi	r30, 0x74	; 116
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	a1 e7       	ldi	r26, 0x71	; 113
 250:	b0 e0       	ldi	r27, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	88 23       	and	r24, r24
 256:	ec f7       	brge	.-6      	; 0x252 <read_twi_2byte_nopreset+0x90>
 258:	8c 91       	ld	r24, X
 25a:	88 7f       	andi	r24, 0xF8	; 248
 25c:	80 34       	cpi	r24, 0x40	; 64
 25e:	c9 f7       	brne	.-14     	; 0x252 <read_twi_2byte_nopreset+0x90>
	TWCR = (1 << TWINT) | (1 << TWEN | 1 << TWEA);// 1st DATA 준비
 260:	84 ec       	ldi	r24, 0xC4	; 196
 262:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x50);
 266:	e4 e7       	ldi	r30, 0x74	; 116
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	a1 e7       	ldi	r26, 0x71	; 113
 26c:	b0 e0       	ldi	r27, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	88 23       	and	r24, r24
 272:	ec f7       	brge	.-6      	; 0x26e <read_twi_2byte_nopreset+0xac>
 274:	8c 91       	ld	r24, X
 276:	88 7f       	andi	r24, 0xF8	; 248
 278:	80 35       	cpi	r24, 0x50	; 80
 27a:	c9 f7       	brne	.-14     	; 0x26e <read_twi_2byte_nopreset+0xac>
	high_byte = TWDR;				// 1st DATA 수신
 27c:	20 91 73 00 	lds	r18, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWEN);// 2nd DATA 준비
 280:	84 e8       	ldi	r24, 0x84	; 132
 282:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(((TWCR & (1 << TWINT)) == 0x00) || (TWSR & 0xf8) != 0x58);
 286:	e4 e7       	ldi	r30, 0x74	; 116
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	a1 e7       	ldi	r26, 0x71	; 113
 28c:	b0 e0       	ldi	r27, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	88 23       	and	r24, r24
 292:	ec f7       	brge	.-6      	; 0x28e <read_twi_2byte_nopreset+0xcc>
 294:	8c 91       	ld	r24, X
 296:	88 7f       	andi	r24, 0xF8	; 248
 298:	88 35       	cpi	r24, 0x58	; 88
 29a:	c9 f7       	brne	.-14     	; 0x28e <read_twi_2byte_nopreset+0xcc>
	low_byte = TWDR;				// 2nd DATA 수신
 29c:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);	// STOP 전송
 2a0:	84 e9       	ldi	r24, 0x94	; 148
 2a2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while ((TWCR & (1 << TWSTO))) ;		 // STOP 확인
 2a6:	e4 e7       	ldi	r30, 0x74	; 116
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	84 fd       	sbrc	r24, 4
 2ae:	fd cf       	rjmp	.-6      	; 0x2aa <read_twi_2byte_nopreset+0xe8>
	return((high_byte<<8) | low_byte);		// 수신 DATA 리턴
 2b0:	89 2f       	mov	r24, r25
 2b2:	90 e0       	ldi	r25, 0x00	; 0
}
 2b4:	92 2b       	or	r25, r18
 2b6:	08 95       	ret

000002b8 <main>:

int main(void)
{
	init_led();
 2b8:	07 df       	rcall	.-498    	; 0xc8 <init_led>
	PORTA = 0xff;
	_delay_ms(1000);
}
void init_buzzer()
{
	DDRB = 0x10;
 2ba:	80 e1       	ldi	r24, 0x10	; 16

int main(void)
{
	init_led();
	init_buzzer();
	init_fnd();
 2bc:	87 bb       	out	0x17, r24	; 23
	init_switch();
 2be:	08 df       	rcall	.-496    	; 0xd0 <init_fnd>
 2c0:	0c df       	rcall	.-488    	; 0xda <init_switch>
	init_timer();
 2c2:	0f df       	rcall	.-482    	; 0xe2 <init_timer>
 2c4:	60 e0       	ldi	r22, 0x00	; 0
	init_serial(115200);
 2c6:	72 ec       	ldi	r23, 0xC2	; 194
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
	init_adc();
 2cc:	11 df       	rcall	.-478    	; 0xf0 <init_serial>
 2ce:	65 df       	rcall	.-310    	; 0x19a <init_adc>
	init_extSwitch();
 2d0:	6a df       	rcall	.-300    	; 0x1a6 <init_extSwitch>
 2d2:	71 df       	rcall	.-286    	; 0x1b6 <init_i2c>
	init_i2c();
 2d4:	78 94       	sei
 2d6:	84 e9       	ldi	r24, 0x94	; 148
	
	//uint8_t address = 
	sei();
 2d8:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	while(!(TWCR&(1<<TWINT)));
	return TWDR;
}
void I2C_stop()
{
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 2dc:	0c e1       	ldi	r16, 0x1C	; 28
		//test_serial();
		//test_adc();
		//test_extSwitch();
		
		temp = read_twi_2byte_nopreset(0);
		sprintf(textBuff,"temp : %d",temp);
 2de:	11 e0       	ldi	r17, 0x01	; 1
 2e0:	cc e2       	ldi	r28, 0x2C	; 44
 2e2:	d1 e0       	ldi	r29, 0x01	; 1
 2e4:	80 e0       	ldi	r24, 0x00	; 0
		//test_timer();
		//test_serial();
		//test_adc();
		//test_extSwitch();
		
		temp = read_twi_2byte_nopreset(0);
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	6c df       	rcall	.-296    	; 0x1c2 <read_twi_2byte_nopreset>
 2ea:	9f 93       	push	r25
		sprintf(textBuff,"temp : %d",temp);
 2ec:	8f 93       	push	r24
 2ee:	1f 93       	push	r17
 2f0:	0f 93       	push	r16
 2f2:	df 93       	push	r29
 2f4:	cf 93       	push	r28
 2f6:	62 d0       	rcall	.+196    	; 0x3bc <sprintf>
 2f8:	ce 01       	movw	r24, r28
 2fa:	41 df       	rcall	.-382    	; 0x17e <SendLine>
		SendLine(textBuff);
 2fc:	0f 90       	pop	r0
 2fe:	0f 90       	pop	r0
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	0f 90       	pop	r0
 306:	0f 90       	pop	r0
 308:	ed cf       	rjmp	.-38     	; 0x2e4 <main+0x2c>

0000030a <__vector_5>:
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
	}
}

ISR(INT4_vect){
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
	extCount++;
 318:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 31c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 320:	01 96       	adiw	r24, 0x01	; 1
 322:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 326:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
}
 32a:	9f 91       	pop	r25
 32c:	8f 91       	pop	r24
 32e:	0f 90       	pop	r0
 330:	0f be       	out	0x3f, r0	; 63
 332:	0f 90       	pop	r0
 334:	1f 90       	pop	r1
 336:	18 95       	reti

00000338 <__vector_6>:
ISR(INT5_vect){
 338:	1f 92       	push	r1
 33a:	0f 92       	push	r0
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	0f 92       	push	r0
 340:	11 24       	eor	r1, r1
 342:	8f 93       	push	r24
 344:	9f 93       	push	r25
	extCount--;
 346:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 34a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 354:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
}
 358:	9f 91       	pop	r25
 35a:	8f 91       	pop	r24
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <__vector_16>:
ISR(TIMER0_OVF_vect){
 366:	1f 92       	push	r1
 368:	0f 92       	push	r0
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	0f 92       	push	r0
 36e:	11 24       	eor	r1, r1
 370:	2f 93       	push	r18
 372:	8f 93       	push	r24
 374:	9f 93       	push	r25
	TCNT0 =256-(256-5);
 376:	85 e0       	ldi	r24, 0x05	; 5
 378:	82 bf       	out	0x32, r24	; 50
	count++;
 37a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count>
 37e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count+0x1>
 382:	01 96       	adiw	r24, 0x01	; 1
 384:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <count+0x1>
 388:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <count>
	if (count >=1000){
 38c:	88 3e       	cpi	r24, 0xE8	; 232
 38e:	93 40       	sbci	r25, 0x03	; 3
 390:	68 f0       	brcs	.+26     	; 0x3ac <__vector_16+0x46>
		sec++; count=0;
 392:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <sec>
 396:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <sec+0x1>
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <sec+0x1>
 3a0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <sec>
 3a4:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <count+0x1>
 3a8:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <count>
	}
}
 3ac:	9f 91       	pop	r25
 3ae:	8f 91       	pop	r24
 3b0:	2f 91       	pop	r18
 3b2:	0f 90       	pop	r0
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	0f 90       	pop	r0
 3b8:	1f 90       	pop	r1
 3ba:	18 95       	reti

000003bc <sprintf>:
 3bc:	0f 93       	push	r16
 3be:	1f 93       	push	r17
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	cd b7       	in	r28, 0x3d	; 61
 3c6:	de b7       	in	r29, 0x3e	; 62
 3c8:	2e 97       	sbiw	r28, 0x0e	; 14
 3ca:	0f b6       	in	r0, 0x3f	; 63
 3cc:	f8 94       	cli
 3ce:	de bf       	out	0x3e, r29	; 62
 3d0:	0f be       	out	0x3f, r0	; 63
 3d2:	cd bf       	out	0x3d, r28	; 61
 3d4:	0d 89       	ldd	r16, Y+21	; 0x15
 3d6:	1e 89       	ldd	r17, Y+22	; 0x16
 3d8:	86 e0       	ldi	r24, 0x06	; 6
 3da:	8c 83       	std	Y+4, r24	; 0x04
 3dc:	1a 83       	std	Y+2, r17	; 0x02
 3de:	09 83       	std	Y+1, r16	; 0x01
 3e0:	8f ef       	ldi	r24, 0xFF	; 255
 3e2:	9f e7       	ldi	r25, 0x7F	; 127
 3e4:	9e 83       	std	Y+6, r25	; 0x06
 3e6:	8d 83       	std	Y+5, r24	; 0x05
 3e8:	ae 01       	movw	r20, r28
 3ea:	47 5e       	subi	r20, 0xE7	; 231
 3ec:	5f 4f       	sbci	r21, 0xFF	; 255
 3ee:	6f 89       	ldd	r22, Y+23	; 0x17
 3f0:	78 8d       	ldd	r23, Y+24	; 0x18
 3f2:	ce 01       	movw	r24, r28
 3f4:	01 96       	adiw	r24, 0x01	; 1
 3f6:	10 d0       	rcall	.+32     	; 0x418 <vfprintf>
 3f8:	ef 81       	ldd	r30, Y+7	; 0x07
 3fa:	f8 85       	ldd	r31, Y+8	; 0x08
 3fc:	e0 0f       	add	r30, r16
 3fe:	f1 1f       	adc	r31, r17
 400:	10 82       	st	Z, r1
 402:	2e 96       	adiw	r28, 0x0e	; 14
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	f8 94       	cli
 408:	de bf       	out	0x3e, r29	; 62
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	08 95       	ret

00000418 <vfprintf>:
 418:	2f 92       	push	r2
 41a:	3f 92       	push	r3
 41c:	4f 92       	push	r4
 41e:	5f 92       	push	r5
 420:	6f 92       	push	r6
 422:	7f 92       	push	r7
 424:	8f 92       	push	r8
 426:	9f 92       	push	r9
 428:	af 92       	push	r10
 42a:	bf 92       	push	r11
 42c:	cf 92       	push	r12
 42e:	df 92       	push	r13
 430:	ef 92       	push	r14
 432:	ff 92       	push	r15
 434:	0f 93       	push	r16
 436:	1f 93       	push	r17
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	cd b7       	in	r28, 0x3d	; 61
 43e:	de b7       	in	r29, 0x3e	; 62
 440:	2b 97       	sbiw	r28, 0x0b	; 11
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	de bf       	out	0x3e, r29	; 62
 448:	0f be       	out	0x3f, r0	; 63
 44a:	cd bf       	out	0x3d, r28	; 61
 44c:	6c 01       	movw	r12, r24
 44e:	7b 01       	movw	r14, r22
 450:	8a 01       	movw	r16, r20
 452:	fc 01       	movw	r30, r24
 454:	17 82       	std	Z+7, r1	; 0x07
 456:	16 82       	std	Z+6, r1	; 0x06
 458:	83 81       	ldd	r24, Z+3	; 0x03
 45a:	81 ff       	sbrs	r24, 1
 45c:	bf c1       	rjmp	.+894    	; 0x7dc <vfprintf+0x3c4>
 45e:	ce 01       	movw	r24, r28
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	3c 01       	movw	r6, r24
 464:	f6 01       	movw	r30, r12
 466:	93 81       	ldd	r25, Z+3	; 0x03
 468:	f7 01       	movw	r30, r14
 46a:	93 fd       	sbrc	r25, 3
 46c:	85 91       	lpm	r24, Z+
 46e:	93 ff       	sbrs	r25, 3
 470:	81 91       	ld	r24, Z+
 472:	7f 01       	movw	r14, r30
 474:	88 23       	and	r24, r24
 476:	09 f4       	brne	.+2      	; 0x47a <vfprintf+0x62>
 478:	ad c1       	rjmp	.+858    	; 0x7d4 <vfprintf+0x3bc>
 47a:	85 32       	cpi	r24, 0x25	; 37
 47c:	39 f4       	brne	.+14     	; 0x48c <vfprintf+0x74>
 47e:	93 fd       	sbrc	r25, 3
 480:	85 91       	lpm	r24, Z+
 482:	93 ff       	sbrs	r25, 3
 484:	81 91       	ld	r24, Z+
 486:	7f 01       	movw	r14, r30
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	21 f4       	brne	.+8      	; 0x494 <vfprintf+0x7c>
 48c:	b6 01       	movw	r22, r12
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	d6 d1       	rcall	.+940    	; 0x83e <fputc>
 492:	e8 cf       	rjmp	.-48     	; 0x464 <vfprintf+0x4c>
 494:	91 2c       	mov	r9, r1
 496:	21 2c       	mov	r2, r1
 498:	31 2c       	mov	r3, r1
 49a:	ff e1       	ldi	r31, 0x1F	; 31
 49c:	f3 15       	cp	r31, r3
 49e:	d8 f0       	brcs	.+54     	; 0x4d6 <vfprintf+0xbe>
 4a0:	8b 32       	cpi	r24, 0x2B	; 43
 4a2:	79 f0       	breq	.+30     	; 0x4c2 <vfprintf+0xaa>
 4a4:	38 f4       	brcc	.+14     	; 0x4b4 <vfprintf+0x9c>
 4a6:	80 32       	cpi	r24, 0x20	; 32
 4a8:	79 f0       	breq	.+30     	; 0x4c8 <vfprintf+0xb0>
 4aa:	83 32       	cpi	r24, 0x23	; 35
 4ac:	a1 f4       	brne	.+40     	; 0x4d6 <vfprintf+0xbe>
 4ae:	23 2d       	mov	r18, r3
 4b0:	20 61       	ori	r18, 0x10	; 16
 4b2:	1d c0       	rjmp	.+58     	; 0x4ee <vfprintf+0xd6>
 4b4:	8d 32       	cpi	r24, 0x2D	; 45
 4b6:	61 f0       	breq	.+24     	; 0x4d0 <vfprintf+0xb8>
 4b8:	80 33       	cpi	r24, 0x30	; 48
 4ba:	69 f4       	brne	.+26     	; 0x4d6 <vfprintf+0xbe>
 4bc:	23 2d       	mov	r18, r3
 4be:	21 60       	ori	r18, 0x01	; 1
 4c0:	16 c0       	rjmp	.+44     	; 0x4ee <vfprintf+0xd6>
 4c2:	83 2d       	mov	r24, r3
 4c4:	82 60       	ori	r24, 0x02	; 2
 4c6:	38 2e       	mov	r3, r24
 4c8:	e3 2d       	mov	r30, r3
 4ca:	e4 60       	ori	r30, 0x04	; 4
 4cc:	3e 2e       	mov	r3, r30
 4ce:	2a c0       	rjmp	.+84     	; 0x524 <vfprintf+0x10c>
 4d0:	f3 2d       	mov	r31, r3
 4d2:	f8 60       	ori	r31, 0x08	; 8
 4d4:	1d c0       	rjmp	.+58     	; 0x510 <vfprintf+0xf8>
 4d6:	37 fc       	sbrc	r3, 7
 4d8:	2d c0       	rjmp	.+90     	; 0x534 <vfprintf+0x11c>
 4da:	20 ed       	ldi	r18, 0xD0	; 208
 4dc:	28 0f       	add	r18, r24
 4de:	2a 30       	cpi	r18, 0x0A	; 10
 4e0:	40 f0       	brcs	.+16     	; 0x4f2 <vfprintf+0xda>
 4e2:	8e 32       	cpi	r24, 0x2E	; 46
 4e4:	b9 f4       	brne	.+46     	; 0x514 <vfprintf+0xfc>
 4e6:	36 fc       	sbrc	r3, 6
 4e8:	75 c1       	rjmp	.+746    	; 0x7d4 <vfprintf+0x3bc>
 4ea:	23 2d       	mov	r18, r3
 4ec:	20 64       	ori	r18, 0x40	; 64
 4ee:	32 2e       	mov	r3, r18
 4f0:	19 c0       	rjmp	.+50     	; 0x524 <vfprintf+0x10c>
 4f2:	36 fe       	sbrs	r3, 6
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <vfprintf+0xea>
 4f6:	8a e0       	ldi	r24, 0x0A	; 10
 4f8:	98 9e       	mul	r9, r24
 4fa:	20 0d       	add	r18, r0
 4fc:	11 24       	eor	r1, r1
 4fe:	92 2e       	mov	r9, r18
 500:	11 c0       	rjmp	.+34     	; 0x524 <vfprintf+0x10c>
 502:	ea e0       	ldi	r30, 0x0A	; 10
 504:	2e 9e       	mul	r2, r30
 506:	20 0d       	add	r18, r0
 508:	11 24       	eor	r1, r1
 50a:	22 2e       	mov	r2, r18
 50c:	f3 2d       	mov	r31, r3
 50e:	f0 62       	ori	r31, 0x20	; 32
 510:	3f 2e       	mov	r3, r31
 512:	08 c0       	rjmp	.+16     	; 0x524 <vfprintf+0x10c>
 514:	8c 36       	cpi	r24, 0x6C	; 108
 516:	21 f4       	brne	.+8      	; 0x520 <vfprintf+0x108>
 518:	83 2d       	mov	r24, r3
 51a:	80 68       	ori	r24, 0x80	; 128
 51c:	38 2e       	mov	r3, r24
 51e:	02 c0       	rjmp	.+4      	; 0x524 <vfprintf+0x10c>
 520:	88 36       	cpi	r24, 0x68	; 104
 522:	41 f4       	brne	.+16     	; 0x534 <vfprintf+0x11c>
 524:	f7 01       	movw	r30, r14
 526:	93 fd       	sbrc	r25, 3
 528:	85 91       	lpm	r24, Z+
 52a:	93 ff       	sbrs	r25, 3
 52c:	81 91       	ld	r24, Z+
 52e:	7f 01       	movw	r14, r30
 530:	81 11       	cpse	r24, r1
 532:	b3 cf       	rjmp	.-154    	; 0x49a <vfprintf+0x82>
 534:	98 2f       	mov	r25, r24
 536:	9f 7d       	andi	r25, 0xDF	; 223
 538:	95 54       	subi	r25, 0x45	; 69
 53a:	93 30       	cpi	r25, 0x03	; 3
 53c:	28 f4       	brcc	.+10     	; 0x548 <vfprintf+0x130>
 53e:	0c 5f       	subi	r16, 0xFC	; 252
 540:	1f 4f       	sbci	r17, 0xFF	; 255
 542:	9f e3       	ldi	r25, 0x3F	; 63
 544:	99 83       	std	Y+1, r25	; 0x01
 546:	0d c0       	rjmp	.+26     	; 0x562 <vfprintf+0x14a>
 548:	83 36       	cpi	r24, 0x63	; 99
 54a:	31 f0       	breq	.+12     	; 0x558 <vfprintf+0x140>
 54c:	83 37       	cpi	r24, 0x73	; 115
 54e:	71 f0       	breq	.+28     	; 0x56c <vfprintf+0x154>
 550:	83 35       	cpi	r24, 0x53	; 83
 552:	09 f0       	breq	.+2      	; 0x556 <vfprintf+0x13e>
 554:	55 c0       	rjmp	.+170    	; 0x600 <vfprintf+0x1e8>
 556:	20 c0       	rjmp	.+64     	; 0x598 <vfprintf+0x180>
 558:	f8 01       	movw	r30, r16
 55a:	80 81       	ld	r24, Z
 55c:	89 83       	std	Y+1, r24	; 0x01
 55e:	0e 5f       	subi	r16, 0xFE	; 254
 560:	1f 4f       	sbci	r17, 0xFF	; 255
 562:	88 24       	eor	r8, r8
 564:	83 94       	inc	r8
 566:	91 2c       	mov	r9, r1
 568:	53 01       	movw	r10, r6
 56a:	12 c0       	rjmp	.+36     	; 0x590 <vfprintf+0x178>
 56c:	28 01       	movw	r4, r16
 56e:	f2 e0       	ldi	r31, 0x02	; 2
 570:	4f 0e       	add	r4, r31
 572:	51 1c       	adc	r5, r1
 574:	f8 01       	movw	r30, r16
 576:	a0 80       	ld	r10, Z
 578:	b1 80       	ldd	r11, Z+1	; 0x01
 57a:	36 fe       	sbrs	r3, 6
 57c:	03 c0       	rjmp	.+6      	; 0x584 <vfprintf+0x16c>
 57e:	69 2d       	mov	r22, r9
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	02 c0       	rjmp	.+4      	; 0x588 <vfprintf+0x170>
 584:	6f ef       	ldi	r22, 0xFF	; 255
 586:	7f ef       	ldi	r23, 0xFF	; 255
 588:	c5 01       	movw	r24, r10
 58a:	4e d1       	rcall	.+668    	; 0x828 <strnlen>
 58c:	4c 01       	movw	r8, r24
 58e:	82 01       	movw	r16, r4
 590:	f3 2d       	mov	r31, r3
 592:	ff 77       	andi	r31, 0x7F	; 127
 594:	3f 2e       	mov	r3, r31
 596:	15 c0       	rjmp	.+42     	; 0x5c2 <vfprintf+0x1aa>
 598:	28 01       	movw	r4, r16
 59a:	22 e0       	ldi	r18, 0x02	; 2
 59c:	42 0e       	add	r4, r18
 59e:	51 1c       	adc	r5, r1
 5a0:	f8 01       	movw	r30, r16
 5a2:	a0 80       	ld	r10, Z
 5a4:	b1 80       	ldd	r11, Z+1	; 0x01
 5a6:	36 fe       	sbrs	r3, 6
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <vfprintf+0x198>
 5aa:	69 2d       	mov	r22, r9
 5ac:	70 e0       	ldi	r23, 0x00	; 0
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <vfprintf+0x19c>
 5b0:	6f ef       	ldi	r22, 0xFF	; 255
 5b2:	7f ef       	ldi	r23, 0xFF	; 255
 5b4:	c5 01       	movw	r24, r10
 5b6:	2d d1       	rcall	.+602    	; 0x812 <strnlen_P>
 5b8:	4c 01       	movw	r8, r24
 5ba:	f3 2d       	mov	r31, r3
 5bc:	f0 68       	ori	r31, 0x80	; 128
 5be:	3f 2e       	mov	r3, r31
 5c0:	82 01       	movw	r16, r4
 5c2:	33 fc       	sbrc	r3, 3
 5c4:	19 c0       	rjmp	.+50     	; 0x5f8 <vfprintf+0x1e0>
 5c6:	82 2d       	mov	r24, r2
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	88 16       	cp	r8, r24
 5cc:	99 06       	cpc	r9, r25
 5ce:	a0 f4       	brcc	.+40     	; 0x5f8 <vfprintf+0x1e0>
 5d0:	b6 01       	movw	r22, r12
 5d2:	80 e2       	ldi	r24, 0x20	; 32
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	33 d1       	rcall	.+614    	; 0x83e <fputc>
 5d8:	2a 94       	dec	r2
 5da:	f5 cf       	rjmp	.-22     	; 0x5c6 <vfprintf+0x1ae>
 5dc:	f5 01       	movw	r30, r10
 5de:	37 fc       	sbrc	r3, 7
 5e0:	85 91       	lpm	r24, Z+
 5e2:	37 fe       	sbrs	r3, 7
 5e4:	81 91       	ld	r24, Z+
 5e6:	5f 01       	movw	r10, r30
 5e8:	b6 01       	movw	r22, r12
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	28 d1       	rcall	.+592    	; 0x83e <fputc>
 5ee:	21 10       	cpse	r2, r1
 5f0:	2a 94       	dec	r2
 5f2:	21 e0       	ldi	r18, 0x01	; 1
 5f4:	82 1a       	sub	r8, r18
 5f6:	91 08       	sbc	r9, r1
 5f8:	81 14       	cp	r8, r1
 5fa:	91 04       	cpc	r9, r1
 5fc:	79 f7       	brne	.-34     	; 0x5dc <vfprintf+0x1c4>
 5fe:	e1 c0       	rjmp	.+450    	; 0x7c2 <vfprintf+0x3aa>
 600:	84 36       	cpi	r24, 0x64	; 100
 602:	11 f0       	breq	.+4      	; 0x608 <vfprintf+0x1f0>
 604:	89 36       	cpi	r24, 0x69	; 105
 606:	39 f5       	brne	.+78     	; 0x656 <vfprintf+0x23e>
 608:	f8 01       	movw	r30, r16
 60a:	37 fe       	sbrs	r3, 7
 60c:	07 c0       	rjmp	.+14     	; 0x61c <vfprintf+0x204>
 60e:	60 81       	ld	r22, Z
 610:	71 81       	ldd	r23, Z+1	; 0x01
 612:	82 81       	ldd	r24, Z+2	; 0x02
 614:	93 81       	ldd	r25, Z+3	; 0x03
 616:	0c 5f       	subi	r16, 0xFC	; 252
 618:	1f 4f       	sbci	r17, 0xFF	; 255
 61a:	08 c0       	rjmp	.+16     	; 0x62c <vfprintf+0x214>
 61c:	60 81       	ld	r22, Z
 61e:	71 81       	ldd	r23, Z+1	; 0x01
 620:	07 2e       	mov	r0, r23
 622:	00 0c       	add	r0, r0
 624:	88 0b       	sbc	r24, r24
 626:	99 0b       	sbc	r25, r25
 628:	0e 5f       	subi	r16, 0xFE	; 254
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	f3 2d       	mov	r31, r3
 62e:	ff 76       	andi	r31, 0x6F	; 111
 630:	3f 2e       	mov	r3, r31
 632:	97 ff       	sbrs	r25, 7
 634:	09 c0       	rjmp	.+18     	; 0x648 <vfprintf+0x230>
 636:	90 95       	com	r25
 638:	80 95       	com	r24
 63a:	70 95       	com	r23
 63c:	61 95       	neg	r22
 63e:	7f 4f       	sbci	r23, 0xFF	; 255
 640:	8f 4f       	sbci	r24, 0xFF	; 255
 642:	9f 4f       	sbci	r25, 0xFF	; 255
 644:	f0 68       	ori	r31, 0x80	; 128
 646:	3f 2e       	mov	r3, r31
 648:	2a e0       	ldi	r18, 0x0A	; 10
 64a:	30 e0       	ldi	r19, 0x00	; 0
 64c:	a3 01       	movw	r20, r6
 64e:	33 d1       	rcall	.+614    	; 0x8b6 <__ultoa_invert>
 650:	88 2e       	mov	r8, r24
 652:	86 18       	sub	r8, r6
 654:	44 c0       	rjmp	.+136    	; 0x6de <vfprintf+0x2c6>
 656:	85 37       	cpi	r24, 0x75	; 117
 658:	31 f4       	brne	.+12     	; 0x666 <vfprintf+0x24e>
 65a:	23 2d       	mov	r18, r3
 65c:	2f 7e       	andi	r18, 0xEF	; 239
 65e:	b2 2e       	mov	r11, r18
 660:	2a e0       	ldi	r18, 0x0A	; 10
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	25 c0       	rjmp	.+74     	; 0x6b0 <vfprintf+0x298>
 666:	93 2d       	mov	r25, r3
 668:	99 7f       	andi	r25, 0xF9	; 249
 66a:	b9 2e       	mov	r11, r25
 66c:	8f 36       	cpi	r24, 0x6F	; 111
 66e:	c1 f0       	breq	.+48     	; 0x6a0 <vfprintf+0x288>
 670:	18 f4       	brcc	.+6      	; 0x678 <vfprintf+0x260>
 672:	88 35       	cpi	r24, 0x58	; 88
 674:	79 f0       	breq	.+30     	; 0x694 <vfprintf+0x27c>
 676:	ae c0       	rjmp	.+348    	; 0x7d4 <vfprintf+0x3bc>
 678:	80 37       	cpi	r24, 0x70	; 112
 67a:	19 f0       	breq	.+6      	; 0x682 <vfprintf+0x26a>
 67c:	88 37       	cpi	r24, 0x78	; 120
 67e:	21 f0       	breq	.+8      	; 0x688 <vfprintf+0x270>
 680:	a9 c0       	rjmp	.+338    	; 0x7d4 <vfprintf+0x3bc>
 682:	e9 2f       	mov	r30, r25
 684:	e0 61       	ori	r30, 0x10	; 16
 686:	be 2e       	mov	r11, r30
 688:	b4 fe       	sbrs	r11, 4
 68a:	0d c0       	rjmp	.+26     	; 0x6a6 <vfprintf+0x28e>
 68c:	fb 2d       	mov	r31, r11
 68e:	f4 60       	ori	r31, 0x04	; 4
 690:	bf 2e       	mov	r11, r31
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <vfprintf+0x28e>
 694:	34 fe       	sbrs	r3, 4
 696:	0a c0       	rjmp	.+20     	; 0x6ac <vfprintf+0x294>
 698:	29 2f       	mov	r18, r25
 69a:	26 60       	ori	r18, 0x06	; 6
 69c:	b2 2e       	mov	r11, r18
 69e:	06 c0       	rjmp	.+12     	; 0x6ac <vfprintf+0x294>
 6a0:	28 e0       	ldi	r18, 0x08	; 8
 6a2:	30 e0       	ldi	r19, 0x00	; 0
 6a4:	05 c0       	rjmp	.+10     	; 0x6b0 <vfprintf+0x298>
 6a6:	20 e1       	ldi	r18, 0x10	; 16
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <vfprintf+0x298>
 6ac:	20 e1       	ldi	r18, 0x10	; 16
 6ae:	32 e0       	ldi	r19, 0x02	; 2
 6b0:	f8 01       	movw	r30, r16
 6b2:	b7 fe       	sbrs	r11, 7
 6b4:	07 c0       	rjmp	.+14     	; 0x6c4 <vfprintf+0x2ac>
 6b6:	60 81       	ld	r22, Z
 6b8:	71 81       	ldd	r23, Z+1	; 0x01
 6ba:	82 81       	ldd	r24, Z+2	; 0x02
 6bc:	93 81       	ldd	r25, Z+3	; 0x03
 6be:	0c 5f       	subi	r16, 0xFC	; 252
 6c0:	1f 4f       	sbci	r17, 0xFF	; 255
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <vfprintf+0x2b8>
 6c4:	60 81       	ld	r22, Z
 6c6:	71 81       	ldd	r23, Z+1	; 0x01
 6c8:	80 e0       	ldi	r24, 0x00	; 0
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 5f       	subi	r16, 0xFE	; 254
 6ce:	1f 4f       	sbci	r17, 0xFF	; 255
 6d0:	a3 01       	movw	r20, r6
 6d2:	f1 d0       	rcall	.+482    	; 0x8b6 <__ultoa_invert>
 6d4:	88 2e       	mov	r8, r24
 6d6:	86 18       	sub	r8, r6
 6d8:	fb 2d       	mov	r31, r11
 6da:	ff 77       	andi	r31, 0x7F	; 127
 6dc:	3f 2e       	mov	r3, r31
 6de:	36 fe       	sbrs	r3, 6
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <vfprintf+0x2e4>
 6e2:	23 2d       	mov	r18, r3
 6e4:	2e 7f       	andi	r18, 0xFE	; 254
 6e6:	a2 2e       	mov	r10, r18
 6e8:	89 14       	cp	r8, r9
 6ea:	58 f4       	brcc	.+22     	; 0x702 <vfprintf+0x2ea>
 6ec:	34 fe       	sbrs	r3, 4
 6ee:	0b c0       	rjmp	.+22     	; 0x706 <vfprintf+0x2ee>
 6f0:	32 fc       	sbrc	r3, 2
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <vfprintf+0x2ee>
 6f4:	83 2d       	mov	r24, r3
 6f6:	8e 7e       	andi	r24, 0xEE	; 238
 6f8:	a8 2e       	mov	r10, r24
 6fa:	05 c0       	rjmp	.+10     	; 0x706 <vfprintf+0x2ee>
 6fc:	b8 2c       	mov	r11, r8
 6fe:	a3 2c       	mov	r10, r3
 700:	03 c0       	rjmp	.+6      	; 0x708 <vfprintf+0x2f0>
 702:	b8 2c       	mov	r11, r8
 704:	01 c0       	rjmp	.+2      	; 0x708 <vfprintf+0x2f0>
 706:	b9 2c       	mov	r11, r9
 708:	a4 fe       	sbrs	r10, 4
 70a:	0f c0       	rjmp	.+30     	; 0x72a <vfprintf+0x312>
 70c:	fe 01       	movw	r30, r28
 70e:	e8 0d       	add	r30, r8
 710:	f1 1d       	adc	r31, r1
 712:	80 81       	ld	r24, Z
 714:	80 33       	cpi	r24, 0x30	; 48
 716:	21 f4       	brne	.+8      	; 0x720 <vfprintf+0x308>
 718:	9a 2d       	mov	r25, r10
 71a:	99 7e       	andi	r25, 0xE9	; 233
 71c:	a9 2e       	mov	r10, r25
 71e:	09 c0       	rjmp	.+18     	; 0x732 <vfprintf+0x31a>
 720:	a2 fe       	sbrs	r10, 2
 722:	06 c0       	rjmp	.+12     	; 0x730 <vfprintf+0x318>
 724:	b3 94       	inc	r11
 726:	b3 94       	inc	r11
 728:	04 c0       	rjmp	.+8      	; 0x732 <vfprintf+0x31a>
 72a:	8a 2d       	mov	r24, r10
 72c:	86 78       	andi	r24, 0x86	; 134
 72e:	09 f0       	breq	.+2      	; 0x732 <vfprintf+0x31a>
 730:	b3 94       	inc	r11
 732:	a3 fc       	sbrc	r10, 3
 734:	10 c0       	rjmp	.+32     	; 0x756 <vfprintf+0x33e>
 736:	a0 fe       	sbrs	r10, 0
 738:	06 c0       	rjmp	.+12     	; 0x746 <vfprintf+0x32e>
 73a:	b2 14       	cp	r11, r2
 73c:	80 f4       	brcc	.+32     	; 0x75e <vfprintf+0x346>
 73e:	28 0c       	add	r2, r8
 740:	92 2c       	mov	r9, r2
 742:	9b 18       	sub	r9, r11
 744:	0d c0       	rjmp	.+26     	; 0x760 <vfprintf+0x348>
 746:	b2 14       	cp	r11, r2
 748:	58 f4       	brcc	.+22     	; 0x760 <vfprintf+0x348>
 74a:	b6 01       	movw	r22, r12
 74c:	80 e2       	ldi	r24, 0x20	; 32
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	76 d0       	rcall	.+236    	; 0x83e <fputc>
 752:	b3 94       	inc	r11
 754:	f8 cf       	rjmp	.-16     	; 0x746 <vfprintf+0x32e>
 756:	b2 14       	cp	r11, r2
 758:	18 f4       	brcc	.+6      	; 0x760 <vfprintf+0x348>
 75a:	2b 18       	sub	r2, r11
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x34a>
 75e:	98 2c       	mov	r9, r8
 760:	21 2c       	mov	r2, r1
 762:	a4 fe       	sbrs	r10, 4
 764:	0f c0       	rjmp	.+30     	; 0x784 <vfprintf+0x36c>
 766:	b6 01       	movw	r22, r12
 768:	80 e3       	ldi	r24, 0x30	; 48
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	68 d0       	rcall	.+208    	; 0x83e <fputc>
 76e:	a2 fe       	sbrs	r10, 2
 770:	16 c0       	rjmp	.+44     	; 0x79e <vfprintf+0x386>
 772:	a1 fc       	sbrc	r10, 1
 774:	03 c0       	rjmp	.+6      	; 0x77c <vfprintf+0x364>
 776:	88 e7       	ldi	r24, 0x78	; 120
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0x368>
 77c:	88 e5       	ldi	r24, 0x58	; 88
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	b6 01       	movw	r22, r12
 782:	0c c0       	rjmp	.+24     	; 0x79c <vfprintf+0x384>
 784:	8a 2d       	mov	r24, r10
 786:	86 78       	andi	r24, 0x86	; 134
 788:	51 f0       	breq	.+20     	; 0x79e <vfprintf+0x386>
 78a:	a1 fe       	sbrs	r10, 1
 78c:	02 c0       	rjmp	.+4      	; 0x792 <vfprintf+0x37a>
 78e:	8b e2       	ldi	r24, 0x2B	; 43
 790:	01 c0       	rjmp	.+2      	; 0x794 <vfprintf+0x37c>
 792:	80 e2       	ldi	r24, 0x20	; 32
 794:	a7 fc       	sbrc	r10, 7
 796:	8d e2       	ldi	r24, 0x2D	; 45
 798:	b6 01       	movw	r22, r12
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	50 d0       	rcall	.+160    	; 0x83e <fputc>
 79e:	89 14       	cp	r8, r9
 7a0:	30 f4       	brcc	.+12     	; 0x7ae <vfprintf+0x396>
 7a2:	b6 01       	movw	r22, r12
 7a4:	80 e3       	ldi	r24, 0x30	; 48
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	4a d0       	rcall	.+148    	; 0x83e <fputc>
 7aa:	9a 94       	dec	r9
 7ac:	f8 cf       	rjmp	.-16     	; 0x79e <vfprintf+0x386>
 7ae:	8a 94       	dec	r8
 7b0:	f3 01       	movw	r30, r6
 7b2:	e8 0d       	add	r30, r8
 7b4:	f1 1d       	adc	r31, r1
 7b6:	80 81       	ld	r24, Z
 7b8:	b6 01       	movw	r22, r12
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	40 d0       	rcall	.+128    	; 0x83e <fputc>
 7be:	81 10       	cpse	r8, r1
 7c0:	f6 cf       	rjmp	.-20     	; 0x7ae <vfprintf+0x396>
 7c2:	22 20       	and	r2, r2
 7c4:	09 f4       	brne	.+2      	; 0x7c8 <vfprintf+0x3b0>
 7c6:	4e ce       	rjmp	.-868    	; 0x464 <vfprintf+0x4c>
 7c8:	b6 01       	movw	r22, r12
 7ca:	80 e2       	ldi	r24, 0x20	; 32
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	37 d0       	rcall	.+110    	; 0x83e <fputc>
 7d0:	2a 94       	dec	r2
 7d2:	f7 cf       	rjmp	.-18     	; 0x7c2 <vfprintf+0x3aa>
 7d4:	f6 01       	movw	r30, r12
 7d6:	86 81       	ldd	r24, Z+6	; 0x06
 7d8:	97 81       	ldd	r25, Z+7	; 0x07
 7da:	02 c0       	rjmp	.+4      	; 0x7e0 <vfprintf+0x3c8>
 7dc:	8f ef       	ldi	r24, 0xFF	; 255
 7de:	9f ef       	ldi	r25, 0xFF	; 255
 7e0:	2b 96       	adiw	r28, 0x0b	; 11
 7e2:	0f b6       	in	r0, 0x3f	; 63
 7e4:	f8 94       	cli
 7e6:	de bf       	out	0x3e, r29	; 62
 7e8:	0f be       	out	0x3f, r0	; 63
 7ea:	cd bf       	out	0x3d, r28	; 61
 7ec:	df 91       	pop	r29
 7ee:	cf 91       	pop	r28
 7f0:	1f 91       	pop	r17
 7f2:	0f 91       	pop	r16
 7f4:	ff 90       	pop	r15
 7f6:	ef 90       	pop	r14
 7f8:	df 90       	pop	r13
 7fa:	cf 90       	pop	r12
 7fc:	bf 90       	pop	r11
 7fe:	af 90       	pop	r10
 800:	9f 90       	pop	r9
 802:	8f 90       	pop	r8
 804:	7f 90       	pop	r7
 806:	6f 90       	pop	r6
 808:	5f 90       	pop	r5
 80a:	4f 90       	pop	r4
 80c:	3f 90       	pop	r3
 80e:	2f 90       	pop	r2
 810:	08 95       	ret

00000812 <strnlen_P>:
 812:	fc 01       	movw	r30, r24
 814:	05 90       	lpm	r0, Z+
 816:	61 50       	subi	r22, 0x01	; 1
 818:	70 40       	sbci	r23, 0x00	; 0
 81a:	01 10       	cpse	r0, r1
 81c:	d8 f7       	brcc	.-10     	; 0x814 <strnlen_P+0x2>
 81e:	80 95       	com	r24
 820:	90 95       	com	r25
 822:	8e 0f       	add	r24, r30
 824:	9f 1f       	adc	r25, r31
 826:	08 95       	ret

00000828 <strnlen>:
 828:	fc 01       	movw	r30, r24
 82a:	61 50       	subi	r22, 0x01	; 1
 82c:	70 40       	sbci	r23, 0x00	; 0
 82e:	01 90       	ld	r0, Z+
 830:	01 10       	cpse	r0, r1
 832:	d8 f7       	brcc	.-10     	; 0x82a <strnlen+0x2>
 834:	80 95       	com	r24
 836:	90 95       	com	r25
 838:	8e 0f       	add	r24, r30
 83a:	9f 1f       	adc	r25, r31
 83c:	08 95       	ret

0000083e <fputc>:
 83e:	0f 93       	push	r16
 840:	1f 93       	push	r17
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	fb 01       	movw	r30, r22
 848:	23 81       	ldd	r18, Z+3	; 0x03
 84a:	21 fd       	sbrc	r18, 1
 84c:	03 c0       	rjmp	.+6      	; 0x854 <fputc+0x16>
 84e:	8f ef       	ldi	r24, 0xFF	; 255
 850:	9f ef       	ldi	r25, 0xFF	; 255
 852:	2c c0       	rjmp	.+88     	; 0x8ac <fputc+0x6e>
 854:	22 ff       	sbrs	r18, 2
 856:	16 c0       	rjmp	.+44     	; 0x884 <fputc+0x46>
 858:	46 81       	ldd	r20, Z+6	; 0x06
 85a:	57 81       	ldd	r21, Z+7	; 0x07
 85c:	24 81       	ldd	r18, Z+4	; 0x04
 85e:	35 81       	ldd	r19, Z+5	; 0x05
 860:	42 17       	cp	r20, r18
 862:	53 07       	cpc	r21, r19
 864:	44 f4       	brge	.+16     	; 0x876 <fputc+0x38>
 866:	a0 81       	ld	r26, Z
 868:	b1 81       	ldd	r27, Z+1	; 0x01
 86a:	9d 01       	movw	r18, r26
 86c:	2f 5f       	subi	r18, 0xFF	; 255
 86e:	3f 4f       	sbci	r19, 0xFF	; 255
 870:	31 83       	std	Z+1, r19	; 0x01
 872:	20 83       	st	Z, r18
 874:	8c 93       	st	X, r24
 876:	26 81       	ldd	r18, Z+6	; 0x06
 878:	37 81       	ldd	r19, Z+7	; 0x07
 87a:	2f 5f       	subi	r18, 0xFF	; 255
 87c:	3f 4f       	sbci	r19, 0xFF	; 255
 87e:	37 83       	std	Z+7, r19	; 0x07
 880:	26 83       	std	Z+6, r18	; 0x06
 882:	14 c0       	rjmp	.+40     	; 0x8ac <fputc+0x6e>
 884:	8b 01       	movw	r16, r22
 886:	ec 01       	movw	r28, r24
 888:	fb 01       	movw	r30, r22
 88a:	00 84       	ldd	r0, Z+8	; 0x08
 88c:	f1 85       	ldd	r31, Z+9	; 0x09
 88e:	e0 2d       	mov	r30, r0
 890:	09 95       	icall
 892:	89 2b       	or	r24, r25
 894:	e1 f6       	brne	.-72     	; 0x84e <fputc+0x10>
 896:	d8 01       	movw	r26, r16
 898:	16 96       	adiw	r26, 0x06	; 6
 89a:	8d 91       	ld	r24, X+
 89c:	9c 91       	ld	r25, X
 89e:	17 97       	sbiw	r26, 0x07	; 7
 8a0:	01 96       	adiw	r24, 0x01	; 1
 8a2:	17 96       	adiw	r26, 0x07	; 7
 8a4:	9c 93       	st	X, r25
 8a6:	8e 93       	st	-X, r24
 8a8:	16 97       	sbiw	r26, 0x06	; 6
 8aa:	ce 01       	movw	r24, r28
 8ac:	df 91       	pop	r29
 8ae:	cf 91       	pop	r28
 8b0:	1f 91       	pop	r17
 8b2:	0f 91       	pop	r16
 8b4:	08 95       	ret

000008b6 <__ultoa_invert>:
 8b6:	fa 01       	movw	r30, r20
 8b8:	aa 27       	eor	r26, r26
 8ba:	28 30       	cpi	r18, 0x08	; 8
 8bc:	51 f1       	breq	.+84     	; 0x912 <__ultoa_invert+0x5c>
 8be:	20 31       	cpi	r18, 0x10	; 16
 8c0:	81 f1       	breq	.+96     	; 0x922 <__ultoa_invert+0x6c>
 8c2:	e8 94       	clt
 8c4:	6f 93       	push	r22
 8c6:	6e 7f       	andi	r22, 0xFE	; 254
 8c8:	6e 5f       	subi	r22, 0xFE	; 254
 8ca:	7f 4f       	sbci	r23, 0xFF	; 255
 8cc:	8f 4f       	sbci	r24, 0xFF	; 255
 8ce:	9f 4f       	sbci	r25, 0xFF	; 255
 8d0:	af 4f       	sbci	r26, 0xFF	; 255
 8d2:	b1 e0       	ldi	r27, 0x01	; 1
 8d4:	3e d0       	rcall	.+124    	; 0x952 <__ultoa_invert+0x9c>
 8d6:	b4 e0       	ldi	r27, 0x04	; 4
 8d8:	3c d0       	rcall	.+120    	; 0x952 <__ultoa_invert+0x9c>
 8da:	67 0f       	add	r22, r23
 8dc:	78 1f       	adc	r23, r24
 8de:	89 1f       	adc	r24, r25
 8e0:	9a 1f       	adc	r25, r26
 8e2:	a1 1d       	adc	r26, r1
 8e4:	68 0f       	add	r22, r24
 8e6:	79 1f       	adc	r23, r25
 8e8:	8a 1f       	adc	r24, r26
 8ea:	91 1d       	adc	r25, r1
 8ec:	a1 1d       	adc	r26, r1
 8ee:	6a 0f       	add	r22, r26
 8f0:	71 1d       	adc	r23, r1
 8f2:	81 1d       	adc	r24, r1
 8f4:	91 1d       	adc	r25, r1
 8f6:	a1 1d       	adc	r26, r1
 8f8:	20 d0       	rcall	.+64     	; 0x93a <__ultoa_invert+0x84>
 8fa:	09 f4       	brne	.+2      	; 0x8fe <__ultoa_invert+0x48>
 8fc:	68 94       	set
 8fe:	3f 91       	pop	r19
 900:	2a e0       	ldi	r18, 0x0A	; 10
 902:	26 9f       	mul	r18, r22
 904:	11 24       	eor	r1, r1
 906:	30 19       	sub	r19, r0
 908:	30 5d       	subi	r19, 0xD0	; 208
 90a:	31 93       	st	Z+, r19
 90c:	de f6       	brtc	.-74     	; 0x8c4 <__ultoa_invert+0xe>
 90e:	cf 01       	movw	r24, r30
 910:	08 95       	ret
 912:	46 2f       	mov	r20, r22
 914:	47 70       	andi	r20, 0x07	; 7
 916:	40 5d       	subi	r20, 0xD0	; 208
 918:	41 93       	st	Z+, r20
 91a:	b3 e0       	ldi	r27, 0x03	; 3
 91c:	0f d0       	rcall	.+30     	; 0x93c <__ultoa_invert+0x86>
 91e:	c9 f7       	brne	.-14     	; 0x912 <__ultoa_invert+0x5c>
 920:	f6 cf       	rjmp	.-20     	; 0x90e <__ultoa_invert+0x58>
 922:	46 2f       	mov	r20, r22
 924:	4f 70       	andi	r20, 0x0F	; 15
 926:	40 5d       	subi	r20, 0xD0	; 208
 928:	4a 33       	cpi	r20, 0x3A	; 58
 92a:	18 f0       	brcs	.+6      	; 0x932 <__ultoa_invert+0x7c>
 92c:	49 5d       	subi	r20, 0xD9	; 217
 92e:	31 fd       	sbrc	r19, 1
 930:	40 52       	subi	r20, 0x20	; 32
 932:	41 93       	st	Z+, r20
 934:	02 d0       	rcall	.+4      	; 0x93a <__ultoa_invert+0x84>
 936:	a9 f7       	brne	.-22     	; 0x922 <__ultoa_invert+0x6c>
 938:	ea cf       	rjmp	.-44     	; 0x90e <__ultoa_invert+0x58>
 93a:	b4 e0       	ldi	r27, 0x04	; 4
 93c:	a6 95       	lsr	r26
 93e:	97 95       	ror	r25
 940:	87 95       	ror	r24
 942:	77 95       	ror	r23
 944:	67 95       	ror	r22
 946:	ba 95       	dec	r27
 948:	c9 f7       	brne	.-14     	; 0x93c <__ultoa_invert+0x86>
 94a:	00 97       	sbiw	r24, 0x00	; 0
 94c:	61 05       	cpc	r22, r1
 94e:	71 05       	cpc	r23, r1
 950:	08 95       	ret
 952:	9b 01       	movw	r18, r22
 954:	ac 01       	movw	r20, r24
 956:	0a 2e       	mov	r0, r26
 958:	06 94       	lsr	r0
 95a:	57 95       	ror	r21
 95c:	47 95       	ror	r20
 95e:	37 95       	ror	r19
 960:	27 95       	ror	r18
 962:	ba 95       	dec	r27
 964:	c9 f7       	brne	.-14     	; 0x958 <__ultoa_invert+0xa2>
 966:	62 0f       	add	r22, r18
 968:	73 1f       	adc	r23, r19
 96a:	84 1f       	adc	r24, r20
 96c:	95 1f       	adc	r25, r21
 96e:	a0 1d       	adc	r26, r0
 970:	08 95       	ret

00000972 <_exit>:
 972:	f8 94       	cli

00000974 <__stop_program>:
 974:	ff cf       	rjmp	.-2      	; 0x974 <__stop_program>
